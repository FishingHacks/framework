export class DocGroup {constructor(){return this;}b:Doc[]=[];getDocs(){return this.b;}addDoc(doc:Doc){this.b.push(doc);return this;}}export class El{t:string;c:string;p:any={};i:string[]=[];constructor(element:{type:string,content:string,props?:object,idList?:string[]}){this.t=element.type;this.c=element.content;element.props?this.p=element.props:null;element.idList?this.i=element.idList:null;return this;}addProps(props:object){Object.keys(props).forEach((el,i)=>this.p[el]=Object.values(props)[i]);return this;}addID(idName:string){this.i.push(idName);return this;}addIDs(ids:string[]){this.i=[...this.i,...ids];return this;}getHTML():string{let el=`<${this.t}`;let v=Object.values(this.p);Object.keys(this.p).forEach((prop,i)=>{el+=` ${prop}`+(v[i]==""?"":`="${v[i]}"`)});return el+`>${this.c}</${this.t}>`;}getType():string{return this.t;}getContent():string{return this.c;}updateContent(content:string){if(this.i.length<1) throw new Error('No ID set for this element! THis is required for manipulation after on.');this.c=content;return this;}}type DOMEvent = keyof DocumentEventMap;type Manipulator = {f:El,n: DOMEvent};export class Link {constructor(){return this;}i:Manipulator[]=[];e:El[]=[];addManipulator(manipulator:El,event:DOMEvent){if(manipulator.i.length<1) throw new Error('A link manipulator must have an ID!');this.i.push({f:manipulator,n:event});return this;}addManipulated(el:El){if(el.i.length<1)throw new Error('An manipulated element must have an ID!');this.e.push(el);}}export class Doc {constructor(){return this;}j:Array<El>=[];l:Array<string>=[];u:Array<string>=[];g=false;v=false;n=80;setWSPort(port:number){this.n=port;return this;}setUseData(useData:boolean):void{useData?this.g=useData:null;}setUseWS(useWS:boolean){useWS?this.v=useWS:null;return this;}addCustomCSS(location:string):void{const defaultElement = '<link rel="stylesheet" href="{{stylesheet}}">';this.l.push(defaultElement.replace('{{stylesheet}}', location));}addCustomJS(location:string,loadBeforePage=false):void{const defaultElement='<script src="{{js}}" {{defer}}></script>';let newEl=defaultElement.replace('{{js}}',location);if(loadBeforePage==false)newEl=newEl.replace('{{defer}}','defer'); else newEl=newEl.replace('{{defer}}','');this.u.push(newEl);}addEl(element:El):void{this.j.push(element);}addEls(elements:Array<El>):void{this.j=[...this.j,...elements];}getEls():Array<El>{return this.j;}getHTML():string{let html='';for(let i=0;i<this.j.length;i++){html+=`${this.j[i].getHTML()}\n`;}return html;}getHTMLDocument(title:string):string{const skeleton=`<!DOCTYPE html><html lang="en"><head><meta charset="UTF-8"><meta http-equiv="X-UA-Compatible" content="IE=edge"><meta name="viewport" content="width=device-width, initial-scale=1.0"><title>{{title}}</title>{{customAdditions}}</head><body>{{content}}</body></html>`;const customAdditions=arrayToStr(this.l,'\n')+arrayToStr(this.u,'\n');let htmlDoc=skeleton.replace('{{title}}',title);htmlDoc = htmlDoc.replace('{{customAdditions}}', customAdditions);htmlDoc = htmlDoc.replace('{{content}}', formatDoc(this));return htmlDoc;}}function formatEl(input:El):string{return `	${input.getHTML()}`;}function formatDoc(input: Doc):string{return arrayToStr(input.getEls().map(formatEl),'\n');}function arrayToStr(input:Array<string>,seperator=''){let output = '';for(let i=0;i<input.length;i++){output+=input[i];output+=seperator;}return output;}
